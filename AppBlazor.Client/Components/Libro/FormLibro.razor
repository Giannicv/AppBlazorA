@inject NavigationManager navigationManager
@inject LibroService libroService
@inject TipoLibroService tipoLibroService
@inject IJSRuntime JS
<h2>@titulo</h2>
<EditForm Model="@oLibroFormCLS" OnValidSubmit="@guardar">
    <DataAnnotationsValidator />
    <div class="mt-3">
        <label>Id Libro</label>
        <InputNumber readonly class="form-control" @bind-Value="oLibroFormCLS.idLibro" />
        <ValidationMessage For="(() => oLibroFormCLS.idLibro)" />
    </div>
    <div class="mt-3">
        <label>Titulo</label>
        <InputText class="form-control" @bind-Value="oLibroFormCLS.titulo" />
        <ValidationMessage For="(() => oLibroFormCLS.titulo)" />
    </div>
    <div class="mt-3">
        <label>Seleccione Tipo de Libro</label>
        <InputSelect class="form-control" @bind-Value="oLibroFormCLS.idtipolibro">
            <option value="0">--Seleccione--</option>
            @foreach (var item in listatipo)
            {
                <option value="@item.idtipolibro">@item.nombretipolibro</option>
            }
        </InputSelect>
        <ValidationMessage For="(() => oLibroFormCLS.idtipolibro)" />
    </div>
    <div class="mt-3">
        <label>Resumen</label>
        <InputTextArea class="form-control" @bind-Value="oLibroFormCLS.resumen" />
        <ValidationMessage For="(() => oLibroFormCLS.resumen)" />
    </div>

    <div class="mt-3">
        <p>Seleccionar Foto</p>
        <img src="@imagePreview" alt="Image Preview" width="150" height="150" style="border:1px solid" />
    </div>
    <div class="mt-2">
        <InputFile OnChange="HandleSelected" accept="image/*" />
    </div>

    <div class="mt-3">
        <p>Seleccionar el libro a subir </p>
        <InputFile OnChange="HandleFileSelected" accept=".pdf"></InputFile>
        <p @onclick="(() => descargar(oLibroFormCLS.idLibro, oLibroFormCLS.nombrearchivo))" style="cursor:pointer; text-decoration:underline">@oLibroFormCLS.nombrearchivo</p>
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button @onclick="@regresar" class="btn btn-danger">Regresar</button>
    </div>

</EditForm>


@code {
    private async Task descargar(int idlibro, string nombrearchivo)
    {
        string archivo = await libroService.recuperarArchivoPorId(idlibro);
        if (archivo != null && archivo.Length > 0)
        {
            await JS.InvokeVoidAsync("descargarArchivo", archivo, nombrearchivo);
        }
    }
    private string? imagePreview = "/img/nofoto.png";
    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);

            imagePreview = $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";
            oLibroFormCLS.image = buffer;
        }
    }
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        oLibroFormCLS.nombrearchivo = file.Name;

        if (file != null)
        {
            oLibroFormCLS.archivo = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(oLibroFormCLS.archivo);
        }
    }

    public LibroFormCLS oLibroFormCLS { get; set; } = new LibroFormCLS();
    [Parameter]
    public int idLibro { get; set; }
    public string titulo { get; set; } = "";

    public List<TipoLibroCLS> listatipo { get; set; } = new List<TipoLibroCLS>();

    protected override async Task OnInitializedAsync()
    {
        listatipo = await tipoLibroService.listarTipoLibros();
        if (idLibro == 0)
        {
            titulo = "Agregar Libro";
        }
        else
        {
            oLibroFormCLS = await libroService.recuperarLibroPorId(idLibro);
            titulo = "Editar Libro" + oLibroFormCLS.titulo;
            if (oLibroFormCLS.image != null)
            {
                imagePreview = "data:image/png;base64," + Convert.ToBase64String(oLibroFormCLS.image);
            }
        }

    }
    private void guardar()
    {
        libroService.guardarLibro(oLibroFormCLS);
        navigationManager.NavigateTo("libro");
    }
    private void regresar()
    {
        navigationManager.NavigateTo("/libro");
    }
}